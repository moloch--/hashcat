name: Build

env:
  include_paths: |
    charsets/
    layouts/
    masks/
    modules/
    OpenCL/
    rules/
    tunings/
    tools/
    hashcat*
    libhashcat*

on:
  push:
    branches:
      - master
    paths:
      - "OpenCL/**.h"
      - "OpenCL/**.cl"
      - "include/**.h"
      - "src/**.c"
      - "tools/**"
      - "**/Makefile"
      - ".github/workflows/build.yml"
  pull_request:
    branches:
      - master
    paths:
      - "OpenCL/**.h"
      - "OpenCL/**.cl"
      - "include/**.h"
      - "src/**.c"
      - "tools/**"
      - "**/Makefile"
      - ".github/workflows/build.yml"

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        shared: [0]
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        env:
          SHARED: ${{ matrix.shared }}
        run: make

      - name: Generate artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hashcat-linux_amd64
          path: ${{ env.include_paths }}

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        shared: [0]
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        env:
          SHARED: ${{ matrix.shared }}
        run: make

      - name: Generate artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hashcat-darwin_universal
          path: ${{ env.include_paths }}

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        shared: [0]
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Install libiconv
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: |
            gcc
            git
            libiconv
            libiconv-devel
            make

      - uses: actions/checkout@v3
      - name: Build
        shell: msys2 {0}
        env:
          SHARED: ${{ matrix.shared }}
        run: make

      - name: Generate artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hashcat-windows_amd64
          path: ${{ env.include_paths }}

  release:
    needs: [build-windows, build-macos, build-linux]

    name: "Release"
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - run: mkdir -p ./builds
      - uses: actions/download-artifact@v3
        with:
          path: ./builds

      - name: "Publish Release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: |
            ./builds/*
