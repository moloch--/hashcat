name: Build

env:
  include_paths: |
    charsets/
    layouts/
    masks/
    modules/
    OpenCL/
    rules/
    tunings/
    tools/
    hashcat*
    libhashcat*
    *.dll

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
    branches:
      - master
    paths:
      - "OpenCL/**.h"
      - "OpenCL/**.cl"
      - "include/**.h"
      - "src/**.c"
      - "tools/**"
      - "**/Makefile"
      - ".github/workflows/build.yml"
  pull_request:
    branches:
      - master
    paths:
      - "OpenCL/**.h"
      - "OpenCL/**.cl"
      - "include/**.h"
      - "src/**.c"
      - "tools/**"
      - "**/Makefile"
      - ".github/workflows/build.yml"

jobs:
  # build-linux:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       shared: [0]
  #   name: Build Linux
  #   runs-on: ubuntu-latest
  #   steps:
  # - uses: actions/checkout@v3

  # - name: Build
  #   env:
  #     SHARED: ${{ matrix.shared }}
  #   run: make

  # - name: Generate artifacts
  #   uses: actions/upload-artifact@v3
  #   with:
  #     name: hashcat-linux_amd64
  #     path: hashcat.zip

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        shared: [0]
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build
        env:
          SHARED: ${{ matrix.shared }}
        run: make

      - name: Generate artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hashcat-darwin_universal
          path: ${{ env.include_paths }}

  # build-windows:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       shared: [0]
  #   name: Build Windows
  #   runs-on: windows-latest
  #   steps:
  #     - name: Install libiconv
  #       uses: msys2/setup-msys2@v2
  #       with:
  #         update: true
  #         install: |
  #           gcc
  #           git
  #           libiconv
  #           libiconv-devel
  #           make

  #     - uses: actions/checkout@v3
  #     - name: Build
  #       shell: msys2 {0}
  #       env:
  #         SHARED: ${{ matrix.shared }}
  #       run: |
  #         make
  #         cp D:\\a\\_temp\\msys64\\usr\\bin\\msys-2.0.dll .
  #         cp D:\\a\\_temp\\msys64\\usr\\bin\\msys-iconv-2.dll .
  #         ls

  #     - name: Generate artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: hashcat-windows_amd64
  #         path: ${{ env.include_paths }}

  release:
    needs: [build-macos]

    name: "Release"
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - run: mkdir -p ./builds
      - run: mkdir -p ./downloads

      - uses: actions/download-artifact@v3
        with:
          path: ./downloads

      - name: Zip artifacts
        run: |
          cd ./downloads/hashcat-darwin_universal && zip -r ../../builds/hashcat-darwin_universal.zip . && cd ../..

      - name: Download
        run: |
          sudo apt-get install -y p7zip-full
          curl -L --fail --output hashcat.7z https://hashcat.net/files/hashcat-6.2.6.7z
          7z x hashcat.7z
          mv hashcat-6.2.6 hashcat
          zip -r hashcat.zip hashcat
          cp hashcat.zip ./builds/hashcat-linux_amd64.zip
          cp hashcat.zip ./builds/hashcat-windows_amd64.zip

      - name: "Publish Release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: ./builds/*.zip
